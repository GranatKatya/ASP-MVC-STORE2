@model WebStoreUi.Models.EditUserViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>EditUserViewModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @foreach (var item in Model.MyRoles)
            {
                if (item.Name == Model.Myroletofind)
                {
                    @Html.RadioButtonFor(m => m.UserRole, item.Name, new { @class = "radio-inline" , @checked = "checked"   })@Html.Label(item.Name)

                }
                else
                {
                    @Html.RadioButtonFor(m => m.UserRole, item.Name, new { @class = "radio-inline" })@Html.Label(item.Name)
                }
            }
                    @*@Html.RadioButtonFor(m => m.UserRole, "Admin", new { @class = "radio-inline" })@Html.Label("Admin")
                @Html.RadioButtonFor(m => m.UserRole, "User", new { @class = "radio-inline" })@Html.Label("User")*@

                </div>
    </div>



    @*@Html.DropDownListFor(m => m.OccupationId, ViewBag.OccupationList as SelectList, htmlAttributes: new { @class = "form-control" })*@


    @*@Html.DropDownList("country", (IEnumerable<SelectListItem>)ViewBag.country,
        "Select country")*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.Role, "DeliveryMethod", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleId, Model.Roles as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div>@Html.DropDownListFor(m => m.UserType, Model.Roles, "Select one")</div>*@



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
