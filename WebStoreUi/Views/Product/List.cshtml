

@using WebStoreDomain.Entities
@using WebStoreUi.HtmlHelpers
@using WebStoreUi.Models

@*@model  IEnumerable<Product>*@
@model ProductListViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Goods";
}

<style>

    .e:hover {
        color: blueviolet;
        border: 3px solid black;
    }

    #categories:hover {
        font-weight: 900;
        color: gray;
    }

    #actionhover :hover {
        text-decoration: underline;
        font-weight: 600;
        color: gray;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .btn1 {
        background-color: DodgerBlue;
        border: none;
        color: white;
        padding: 12px 16px;
        font-size: 16px;
        cursor: pointer;
    }

        /* Darker background on mouse-over */
        .btn1:hover {
            background-color: RoyalBlue;
        }
</style>




<h2 style="text-align: center; font-weight:  800; font-size: xx-large; ">Goods</h2>

<div style=" display: flex; text-align: center;   justify-content: center; /* center items horizontally, in this case */
    flex-direction:row; font-weight:800;  margin: 20px; text-decoration: underline; ">

    <div id="categories" style=" width: 20%;  ">АКЦИОННЫЕ ТОВАРЫ</div>
    <div id="categories" style=" width: 20%; ">ДЛЯ ТЕЛА</div>
    <div id="categories" style=" width: 20%; ">КОСМЕТИКА ДЛЯ ЛИЦА</div>
</div>

@*<div>
        <h2>@Html.ActionLink("Add", "Add")</h2>
    </div>*@

<div style="margin: 20px; ">
    Главная > Товары
</div>



<form method="get">
    <div class="form-inline">
        <label class="control-label">Name: </label>
        @Html.DropDownList("productname", Model.ProductNames as SelectList,
                    htmlAttributes: new { @class = "form-control" })

        @*<label class="control-label">Позиция игрока: </label>
            @Html.DropDownList("position", Model.Positions as SelectList,

                    htmlAttributes: new { @class = "form-control" })*@

        <input type="submit" value="Фильтр" class="btn btn-default" />
    </div>
</form>


<style>
div.parent {
  position: relative;
  
}

div.absolute {
  position: absolute; 
  bottom: 10px;  
}

div.absoluteprice {
  position: absolute; 
  bottom: 37px;  
}
</style>
<div style="display: flex;   flex-direction:row; flex-wrap: wrap;  align-content:center ">
    @foreach (var good in @Model.Products)
    {
    <div class="e parent" style="background-color: beige;  min-height: 90px; height: auto;  width: 30%;  margin: 5px; border: 1px solid black; text-align: center;">
       
            <div style="height: 50px;">
                <h3>@Html.ActionLink(good.Name, "Details", new { id = good.Id })</h3>
            </div>

            <div>
                 <img src="@Url.Content(good.Src)" style="margin: 4px; width: 50%; height: 220px;" />
            </div>  

            @*<h5>@good.Description</h5>*@
            <div  >
                <p>Price: @good.Price $</p>
            </div>
       
                <div  style="margin-bottom:10px;">
                    @Html.ActionLink("Buy", "AddToCart", "Cart", new { productId = good.Id, returnUrl = Request.Url.PathAndQuery }, new { @class = "btn btn-primary" })
                </div>
           
            @*<div>
                <button class="btn1"><i class="fa fa-trash"> @Html.ActionLink("Delete", "Delete", new { id = good.Id })</i></button>
                <button class="btn1"><i class="fa fa-edit"> @Html.ActionLink("Edit", "Edit", new { id = good.Id })</i></button>
            </div>*@
        </div>

        @*<div>
            <p>@good.Name</p>
            <p>@good.Price.ToString("# $")</p>
        </div>*@
        }
    </div>






<div>
    @Html.PageLinks(Model.PagingInfo, i => Url.Action("List", new { page = i, category = Model.CurrentCategory }))
</div>



@*<h2>Goods</h2>
    @foreach (var good in @Model)
    {
        <div>
            <p>@good.Name</p>
            <p>@good.Price.ToString("# $")</p>
        </div>
    }*@









@*<div >
    @{
        int totalPage = (int)Math.Ceiling((double) ViewBag.Count / ViewBag.PageSize);

    }
    @for (int i = 0; i < totalPage; i++)
    {

        string str = (i + 1 == ViewBag.CurrentPage) ? "select btn btn-success  btn-lg " : "btn btn-default";

        @*if (totalPage == ViewBag.CurrentPage )
        {
            @Html.ActionLink($"{i + 1}", "List", "Product", new { page = i + 1 }, new { @class = "btn btn-success" });
        }
        else
        @*{*@
@*  @Html.ActionLink($"{i + 1}", "List", "Product", new { page = i + 1 }, new { @class = str });*@
@*}

    }*@


@*</div>*@



@section Footer1 {
    Все права защищены. Syte Corp. 2012.
}
@*@section Footer {
    Все права защищены. Syte Corp. 2012.
}*@