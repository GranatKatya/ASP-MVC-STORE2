@model WebStoreUi.Models.OrderCartListViewModel

@{
    ViewBag.Title = "Dushka: форма заказа";
}


@using WebStoreDomain.Entities;

<h2>Оформить заказ сейчас</h2>
<p>Пожалуйста введи ваши контактные данные, и мы сразу отправим товар!</p>



<style>
    #cartTable td {
        vertical-align: middle;
    }
</style>

@*@model WebStoreUi.Models.CartIndexViewModel*@

<h2>Ваша корзина:</h2>
@Html.ValidationSummary()
<table id="cartTable" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th scope="col">Good</th>
            <th scope="col">Price</th>
            <th scope="col">Amount</th>
            <th scope="col">Sum</th>
            <th></th>

        </tr>
    </thead>
    <tbody>
        @*  @foreach (CartItem item in Model.Order.CartItems)*@
        @foreach (CartItem item in Model.Cart.Items)
        {
            <tr>
                <td>@item.Product.Name</td>
                <td>@item.Product.Price.ToString("# $")</td>
                <td>
                    @item.Quantity

                    <div>
                        @Html.ActionLink("+", "AddToCartEditMethod", "Order", new { productId = item.Product.Id, returnUrl = Request.Url.PathAndQuery }, new { @class = "btn btn-primary btn-sm" })
                        @Html.ActionLink("-", "RemoveFromCartDecrementEditMethod", "Order", new { productId = item.Product.Id, returnUrl = Request.Url.PathAndQuery }, new { @class = "btn btn-primary btn-sm" })
                    </div>

                </td>
                <td>@((item.Product.Price * item.Quantity).ToString("# $"))</td>

                <td>
                    @using (Html.BeginForm("RemoveFromCartEditMethod", "Order"))
                    {
                        @Html.Hidden("productid", item.Product.Id)
                        @Html.HiddenFor(x => x.ReturnUrl)
                        <button type="submit" class="btn btn-sm btn-warning"><i class="fa fa-close" style="color:black">Delete</i></button>
                    }
                </td>

            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="4">Total:</td>
            <td>@Model.Cart.ComputeTotalValue()</td>
        </tr>
    </tfoot>

</table>

















<div>


    @{ WebStoreDomain.Entities.Product pr = null; }
    <h2>List</h2>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => pr.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => pr.Price)
            </th>

            <th>
                @Html.DisplayNameFor(model => pr.Volume)
            </th>
            <th>
                @Html.DisplayName("InStoke")
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Volume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InStoke)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>*@
                <td>
                    <div>
                        @*    @Html.ActionLink("Buy", "AddToCart", "Order", new { productId = item.Id, returnUrl = Request.Url.PathAndQuery, orderCartListViewModel = Model }, new { @class = "btn btn-primary" })*@

                        @Html.ActionLink("Buy", "AddToCartEditMethod", "Order", new { productId = item.Id, returnUrl = Request.Url.PathAndQuery, orderCartListViewModel = Model }, new { @class = "btn btn-primary" })

                    </div>
                </td>
            </tr>
        }
    </table>

    @*<div>
            @Html.PageLinks(Model.PagingInfo, i => Url.Action("List", new { page = i }))
        </div>*@


<div>
  @*  <button class="btn1"><i class="fa fa-trash"> @Html.ActionLink("Create", "CreateOrderAdmin", "Order")</i></button>*@
    @Html.ActionLink("Create", "EditOrderAdmin", "Order", null, new { @class = "btn btn-primary" })
</div>

</div>














<div>
    @Html.ActionLink("Back to List", "Index")
</div>
